{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","services/fetchService.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.js","components/Button/Button.jsx","helpers/Scroll.jsx","components/Modal/Modal.jsx","img/man.jpg","components/ImageError/ImageError.jsx","components/App/App.js","index.js"],"names":["module","exports","MY_API_KEY","getPictures","query","a","page","axios","get","hits","data","defaults","baseURL","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","s","SearchForm","e","preventDefault","trim","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","SearchForm__button","SearchForm__buttonLabel","SearchForm__input","autoComplete","value","onChange","currentTarget","toLowerCase","autoFocus","placeholder","ImageGalleryItem","image","openModal","onClick","src","webformatURL","alt","tag","imageGalleryItem__image","ImageGallery","images","onOpenModal","imageGallery","map","imageGalleryItem","id","Loader","LoaderContainer","color","height","width","timeout","Button","onScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","modalRoot","querySelector","Modal","onClose","children","useEffect","addEventListener","code","createPortal","overlay","target","modal","NoFoundImage","role","lonely","App","setPage","setImages","loading","setLoading","showModal","setShowModal","largeImage","setLargeImage","searchImages","prevImage","Scroll","console","log","message","toggleModal","length","largeImageURL","prevPage","newestOnTop","rtl","pauseOnFocusLoss","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,iBAAmB,uCAAuC,aAAe,qC,mBCA3FD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,wBAA0B,kDAAkD,iBAAmB,6C,mBCAjHD,EAAOC,QAAU,CAAC,gBAAkB,kC,mBCApCD,EAAOC,QAAU,CAAC,OAAS,yB,uCCA3BD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,mBAAqB,sCAAsC,wBAA0B,2CAA2C,kBAAoB,uC,+KCCpPC,EAAa,qCAKZ,SAAeC,EAAtB,kC,4CAAO,WAA2BC,GAA3B,+BAAAC,EAAA,6DAAkCC,EAAlC,+BAAyC,EAAzC,SAGKC,IAAMC,IAAN,aAAgBJ,EAAhB,iBAA8BE,EAA9B,4BAAsDJ,IAH3D,uBAEKO,EAFL,EAEHC,KAAQD,KAFL,kBAKEA,GALF,2C,wBAHPF,IAAMI,SAASC,QACb,mE,2BCAa,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAElC,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAsCA,OACE,mCACE,wBAAQC,UAAWC,IAAEN,UAArB,SACE,uBAAMK,UAAWC,IAAEC,WAAYN,SAnChB,SAAAO,GACnBA,EAAEC,iBAEyB,KAAvBN,EAAYO,OAYI,UAAhBP,GAaJF,EAASE,GACTC,EAAe,KAbbO,IAAMC,MAAM,cAAe,CACzBC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAnBZT,IAAMC,MAAM,2BAA4B,CACtCC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAwBV,UACE,wBAAQC,KAAK,SAAShB,UAAWC,IAAEgB,mBAAnC,SACE,sBAAMjB,UAAWC,IAAEiB,wBAAnB,sBAGF,uBACElB,UAAWC,IAAEkB,kBACbH,KAAK,OACLI,aAAa,MACbC,MAAOvB,EACPwB,SAjDW,SAAAnB,GACnBJ,EAAeI,EAAEoB,cAAcF,MAAMG,gBAiD7BC,WAAS,EACTC,YAAY,oC,qBCrCTC,EApBU,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACjC,OACE,mCACE,qBACEC,QAAS,WACPD,EAAUD,IAEZG,IAAKH,EAAMI,aACXC,IAAKL,EAAMM,IACXlC,UAAWC,IAAEkC,6B,iBCSNC,MAjBf,YAAqD,IAAD,IAA5BC,cAA4B,MAAnB,GAAmB,EAAfC,EAAe,EAAfA,YACnC,OACE,oBAAItC,UAAWC,IAAEsC,aAAjB,SACGF,EAAOG,KAAI,SAAAZ,GAAK,OACf,oBAAI5B,UAAWC,IAAEwC,iBAAjB,SACE,cAAC,EAAD,CAAkBb,MAAOA,EAAOC,UAAWS,KADLV,EAAMc,U,0CCUvCC,EAdA,WACb,OACE,qBAAK3C,UAAWC,IAAE2C,gBAAlB,SACE,cAAC,IAAD,CACE5B,KAAK,SACL6B,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,S,iBCKFC,EAdA,SAAC,GAAiB,IAAfnB,EAAc,EAAdA,QAChB,OACE,8BACE,wBAAQd,KAAK,SAASc,QAASA,EAAS9B,UAAWC,IAAEgD,OAArD,6BCCSC,EAPE,WACfC,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,Y,iBCERC,EAAYJ,SAASK,cAAc,eAE1B,SAASC,EAAT,GAAuC,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACvCC,qBAAU,WAMRZ,OAAOa,iBAAiB,WALF,SAAA7D,GACL,WAAXA,EAAE8D,MACJJ,SAIH,CAACA,IAQJ,OAAOK,uBACL,qBAAKlE,UAAWC,IAAEkE,QAASrC,QAPD,SAAA3B,GACtBA,EAAEoB,gBAAkBpB,EAAEiE,QACxBP,KAKF,SACE,qBAAK7D,UAAWC,IAAEoE,MAAlB,SAA0BP,MAE5BJ,GC3BW,UAA0B,gCCW1BY,EATM,WACnB,OACE,sBAAKC,KAAK,QAAV,UACE,qBAAKxC,IAAKyC,EAAQzB,MAAM,MAAMd,IAAI,eAClC,gD,MCUS,SAASwC,IACtB,MAAwB5E,mBAAS,GAAjC,mBAAOT,EAAP,KAAasF,EAAb,KACA,EAA4B7E,mBAAS,IAArC,mBAAOwC,EAAP,KAAesC,EAAf,KACA,EAAsC9E,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,oBAAS,GAAvC,mBAAO+E,EAAP,KAAgBC,EAAhB,KACA,EAAkChF,oBAAS,GAA3C,mBAAOiF,EAAP,KAAkBC,EAAlB,KACA,EAAoClF,mBAAS,IAA7C,mBAAOmF,EAAP,KAAmBC,EAAnB,KAEAlB,qBAAU,WACR,GAAKjE,EAAL,CAEA,IAAMoF,EAAY,uCAAG,4BAAA/F,EAAA,6DACnB0F,GAAW,GADQ,kBAGI5F,EAAYa,EAAaV,GAH7B,OAGXiD,EAHW,OAIjBsC,GAAU,SAAAQ,GAAS,4BAAQA,GAAR,YAAsB9C,OAC5B,IAATjD,GACFgG,IANe,gDASjBC,QAAQC,IAAI,KAAIC,SATC,yBAWjBV,GAAW,GAXM,4EAAH,qDAelBK,OACC,CAACpF,EAAaV,IAEjB,IAMMoG,EAAc,WAClBT,GAAcD,IAchB,OACE,gCACE,cAACnF,EAAD,CAAWC,SAvBY,SAAAE,GACzBC,EAAeD,GACf4E,EAAQ,GACRC,EAAU,OAsBPC,GAAW,cAAC,EAAD,IACO,IAAlBvC,EAAOoD,OACN,cAAC,EAAD,CAAcpD,OAAQA,EAAQC,YAjBV,SAAA0C,GACxBC,EAAcD,GACdQ,OAiBoB,KAAhB1F,GAAsB,cAAC,EAAD,IAEvB8E,IAAYE,GAAa,cAAC,EAAD,IAEzBA,GACC,eAAClB,EAAD,CAAOC,QAAS2B,EAAhB,UACE,qBACEzD,IAAKiD,EAAWU,cAChBzD,IAAK+C,EAAW9C,IAChBQ,GAAIsC,EAAWtC,KAEjB,wBAAQ1B,KAAK,SAASc,QAAS0D,EAA/B,uBAKFZ,GAAWvC,EAAO,IAAM,cAAC,EAAD,CAAQP,QA9BV,WAC1B+C,GAAW,GACXH,GAAQ,SAAAiB,GAAQ,OAAIA,EAAW,KAC/Bd,GAAW,MA4BT,cAAC,IAAD,CACEpE,UAAW,IACXD,SAAS,aACTE,iBAAe,EACfkF,aAAa,EACbjF,cAAY,EACZkF,KAAK,EACLC,kBAAgB,EAChBjF,WAAS,EACTD,cAAY,OC/FpBmF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3C,SAAS4C,eAAe,W","file":"static/js/main.83f7ec46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGallery_imageGalleryItem__11Wyu\",\"imageGallery\":\"ImageGallery_imageGallery__2Su2F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__1diO_\",\"modal\":\"Modal_modal__gG3BE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem__image\":\"ImageGalleryItem_imageGalleryItem__image__18ev8\",\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__3dJfW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoaderContainer\":\"Loader_LoaderContainer__C9LM5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3Nbwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1BYme\",\"SearchForm\":\"Searchbar_SearchForm__2cLzK\",\"SearchForm__button\":\"Searchbar_SearchForm__button__29GY2\",\"SearchForm__buttonLabel\":\"Searchbar_SearchForm__buttonLabel__1DYgo\",\"SearchForm__input\":\"Searchbar_SearchForm__input__26ZKE\"};","import axios from 'axios';\r\n\r\nconst MY_API_KEY = '23063121-c7c43e31505ed95884d92e826';\r\n\r\naxios.defaults.baseURL =\r\n  'https://pixabay.com/api/?image_type=photo&orientation=horizontal';\r\n\r\nexport async function getPictures(query, page = 1) {\r\n  const {\r\n    data: { hits },\r\n  } = await axios.get(`&q=${query}&page=${page}&per_page=12&key=${MY_API_KEY}`);\r\n\r\n  return hits;\r\n}\r\n","import { useState } from 'react';\r\nimport s from './Searchbar.module.css';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  //   const [image, setImage] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setSearchQuery(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (searchQuery.trim() === '') {\r\n      toast.error('Search images and photos', {\r\n        position: 'top-center',\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (searchQuery === 'error') {\r\n      toast.error('No match...', {\r\n        position: 'top-center',\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n\r\n    onSubmit(searchQuery);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n          <button type=\"submit\" className={s.SearchForm__button}>\r\n            <span className={s.SearchForm__buttonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={s.SearchForm__input}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            value={searchQuery}\r\n            onChange={handleChange}\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  searchQuery: PropTypes.string,\r\n};\r\n","import s from './ImageGalleryItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ image, openModal }) => {\r\n  return (\r\n    <>\r\n      <img\r\n        onClick={() => {\r\n          openModal(image);\r\n        }}\r\n        src={image.webformatURL}\r\n        alt={image.tag}\r\n        className={s.imageGalleryItem__image}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.object,\r\n  openModal: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nfunction ImageGallery({ images = [], onOpenModal }) {\r\n  return (\r\n    <ul className={s.imageGallery}>\r\n      {images.map(image => (\r\n        <li className={s.imageGalleryItem} key={image.id}>\r\n          <ImageGalleryItem image={image} openModal={onOpenModal} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.shape),\r\n  onOpenModal: PropTypes.func,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Component from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={s.LoaderContainer}>\r\n      <Component\r\n        type=\"Hearts\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={300}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import s from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={onClick} className={s.Button}>\r\n        Load More...\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","const onScroll = () => {\r\n  window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: 'smooth',\r\n  });\r\n};\r\n\r\nexport default onScroll;\r\n","import { useEffect } from 'react';\r\nimport s from './Modal.module.css';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ onClose, children }) {\r\n  useEffect(() => {\r\n    const handleKeydown = e => {\r\n      if (e.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeydown);\r\n  }, [onClose]);\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.overlay} onClick={handleBackdropClick}>\r\n      <div className={s.modal}>{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/man.cc751b0c.jpg\";","import lonely from '../../img/man.jpg';\r\n\r\nconst NoFoundImage = () => {\r\n  return (\r\n    <div role=\"alert\">\r\n      <img src={lonely} width=\"400\" alt=\"lonely-man\" />\r\n      <p>No match...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoFoundImage;\r\n","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getPictures } from '../../services/fetchService';\n\nimport Searchbar from '../Searchbar';\nimport ImageGallery from '../ImageGallery';\nimport Loader from '../Loader';\nimport Button from '../Button';\nimport Scroll from '../../helpers/Scroll';\nimport Modal from '../Modal';\nimport NoFoundImage from '../ImageError/ImageError';\n\nimport './App.css';\n\nexport default function App() {\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImage, setLargeImage] = useState({});\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    const searchImages = async () => {\n      setLoading(true);\n      try {\n        const images = await getPictures(searchQuery, page);\n        setImages(prevImage => [...prevImage, ...images]);\n        if (page !== 1) {\n          Scroll();\n        }\n      } catch (err) {\n        console.log(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    searchImages();\n  }, [searchQuery, page]);\n\n  const handleSearchSubmit = searchQuery => {\n    setSearchQuery(searchQuery);\n    setPage(1);\n    setImages([]);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onClickLargeImage = largeImage => {\n    setLargeImage(largeImage);\n    toggleModal();\n  };\n\n  const handleLoadMoreClick = () => {\n    setLoading(true);\n    setPage(prevPage => prevPage + 1);\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleSearchSubmit} />\n\n      {loading && <Loader />}\n      {images.length !== 0 ? (\n        <ImageGallery images={images} onOpenModal={onClickLargeImage} />\n      ) : (\n        searchQuery !== '' && <NoFoundImage />\n      )}\n      {loading && !showModal && <Loader />}\n\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <img\n            src={largeImage.largeImageURL}\n            alt={largeImage.tag}\n            id={largeImage.id}\n          />\n          <button type=\"button\" onClick={toggleModal}>\n            Close\n          </button>\n        </Modal>\n      )}\n      {!loading && images[0] && <Button onClick={handleLoadMoreClick} />}\n      <ToastContainer\n        autoClose={3000}\n        position=\"top-center\"\n        hideProgressBar\n        newestOnTop={true}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n}\n\n// state = {\n//   page: 1,\n//   images: [],\n//   searchQuery: '',\n//   loading: false,\n//   showModal: false,\n// };\n// componentDidUpdate(prevProps, prevState) {\n//   const { searchQuery } = this.state;\n//   if (searchQuery !== prevState.searchQuery) {\n//     this.searchImage()\n//       .catch(err => console.log(err))\n//       .finally(() => this.setState({ loading: false }));\n//   }\n// }\n// searchImage = () => {\n//   const { searchQuery, page } = this.state;\n//   this.setState({ loading: true });\n\n//   return getPictures(searchQuery, page).then(images => {\n//     this.setState(prevState => ({\n//       images: [...prevState.images, ...images],\n//       page: prevState.page + 1,\n//     }));\n//   });\n// };\n\n// handleSearchSubmit = searchQuery => {\n//   this.setState({ searchQuery, page: 1, images: [] });\n// };\n\n// toggleModal = () => {\n//   this.setState(({ showModal }) => ({\n//     showModal: !showModal,\n//   }));\n// };\n\n// onClickLargeImage = largeImage => {\n//   this.setState({ largeImage });\n//   this.toggleModal();\n// };\n\n// handleLoadMoreClick = () => {\n//   this.setState({ loading: true });\n//   this.searchImage()\n//     .then(() => {\n//       Scroll();\n//     })\n//     .catch(err => console.log(err))\n//     .finally(() => this.setState({ loading: false }));\n// };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}